metaxploit = include_lib("/lib/metaxploit.so")
if not metaxploit then
  metaxploit = include_lib(current_path + "/metaxploit.so")
end if
if not metaxploit then
  exit("Can't find metaxploit.so in /lib folder or current folder.")
end if

metaLib = metaxploit.load(params[0])
addresses = metaxploit.scan(metaLib)
print(addresses)

resultList = []
result = null

for address in addresses
  bigStr = metaxploit.scan_address(metaLib, address)
  bigStrSplit = bigStr.split("Unsafe check:")
  print(bigStr)

  for chunk in bigStrSplit
    if chunk == bigStrSplit[0] then continue
    badStr = chunk[chunk.indexOf("<b>") + 3 : chunk.indexOf("</b>")]
    badStr = badStr.replace("\n", "")
    print("Firing exploit: " + address + " " + badStr)
    result = metaLib.overflow(address, badStr, "password")
    if result then resultList.push(result)
    print("Hooked :<b> " + typeof(result))
    print(char(10) + "==================" + char(10) + char(10))
  end for
end for

print(char(10) + resultList + char(10))

handle = {}
handle.shell = function(object)
  return object.start_terminal
end function
handle.computer = function(object)
  return object.public_ip
end function
handle.file = function(object)
  return object.path
end function

print
print("Select an object:")
i = 0
for result in resultList
  print("[" + i + "]" + " " + typeof(result))
  i = 1 + i
end for

selection = user_input(":> ").to_int

if selection > 0 and selection < resultList.len then
  handleThis = resultList[selection]
  print(handleThis)
  // if typeof(handleThis) == "number" then
  // "password change if server or firewall disabled if router"
  // else
  // pointer = @handle[typeof(handleThis)]
  // print(pointer(handleThis))
  // end if
end if
